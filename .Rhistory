#use UU U-drive to save the data
setwd(â€ªU:\My R Files)
#use UU U-drive to save the data
setwd("U:/My R Files")
age <- c(1,3,5,2,11,9,3,9,12,3)
weight <- c(4.4,5.3,7.2,5.2,8.5,7.3,6.0,10.4,10.2,6.1)
mean(weight)
sd(weight)
cor(age,weight)
plot(age,weight)
options()
options(digits=3)
x <- runif(20)
summary(x)
hist(x)
savehistory()
save.image()
# A sample R session
# q() is commented out so you don't accidently exit
#learn R
x <- rnorm(5)
x
demo()
demo(image)
help.start()
help("foo")
?foo
??foo
getwd()
ls()
setwd("U:/My R Files")
options()
options(digits=3)
x <- runif(20)
summary(x)
hist(x)
savehistory()
save.image()
save.image("U:/My R Files")
save.image("My R Files")
hist(x)
help.start()
hist(x)
save.image("My R Files")
hist(x)
save.image("picture")
help.start()
history(#)
history(#)
# q()
q()
ede
install.packages("vcd")
help(package="vcd")
help(package="vcd")
library(vcd)
help(Arthritis)
Arthritis
example(Arthritis)
source("script1.R")
source("Ch01 Introduction to R.R")
setwd("C:\Users\1\Documents\GitHub\RiA2")
setwd("C:Users\1\Documents\GitHub\RiA2")
setwd("C:/Users/1/Documents/GitHub/RiA2")
source("Ch01 Introduction to R.R")
#  Creating vectors
a <- c(1, 2, 5, 3, 6, -2, 4)
b <- c("one", "two", "three")
c <- c(TRUE, TRUE, TRUE, FALSE, TRUE, FALSE)
a
b# Using vector subscripts
b
c
# Using vector subscripts
a <- c(1, 2, 5, 3, 6, -2, 4)
a[3]
a[c(1, 3, 5)]
a[2:6]
# Using vector subscripts
a <- c(1, 2, 5, 3, 6, -2, 4)
a[3]
a[c(1, 3, 5)]
a[2:6]
# Listing 2.1 - Creating Matrices
y <- matrix(1:20, nrow=5, ncol=4)
y
cells    <- c(1,26,24,68)
rnames   <- c("R1", "R2")
cnames   <- c("C1", "C2")
mymatrix <- matrix(cells, nrow=2, ncol=2, byrow=TRUE,
dimnames=list(rnames, cnames))
mymatrix
mymatrix <- matrix(cells, nrow=2, ncol=2, byrow=FALSE,
dimnames=list(rnames, cnames))
mymatrix
# Listing 2.2 - Using matrix subscripts
x <- matrix(1:10, nrow=2)
x
x[2,]
x[,2]
x[1,4]
x[1, c(4,5)]
# Listing 2.3 - Creating an array
dim1 <- c("A1", "A2")
dim2 <- c("B1", "B2", "B3")
dim3 <- c("C1", "C2", "C3", "C4")
z <- array(1:24, c(2,3,4), dimnames=list(dim1, dim2, dim3))
z
z[1,2,3]
# Listing 2.4 - Creating a dataframe
patientID <- c(1, 2, 3, 4)
age <- c(25, 34, 28, 52)
diabetes <- c("Type1", "Type2", "Type1", "Type1")
status <- c("Poor", "Improved", "Excellent", "Poor")
patientdata <- data.frame(patientID, age, diabetes, status)
patientdata
# Listing 2.5 - Specifying elements of a dataframe
patientdata[1:2]
patientdata[c("diabetes","status")]
patientdata$age
# Listing 2.6 - Using factors
patientID <- c(1, 2, 3, 4)
age <- c(25, 34, 28, 52)
diabetes <- c("Type1", "Type2", "Type1", "Type1")
status <- c("Poor", "Improved", "Excellent", "Poor")
diabetes <- factor(diabetes)
status <- factor(status, order=TRUE)
patientdata <- data.frame(patientID, age, diabetes, status)
str(patientdata)
summary(patientdata)
patientdata
> table(patientdata$diabetes, patientdata$status)
table(patientdata$diabetes, patientdata$status)
patientdata <- data.frame(patientID, age, diabetes,
status, row.names=patientID)
patientdata
patientdata <- data.frame(patientID, age, diabetes,
status, row.names=age)
patientdata
patientdata <- data.frame(patientID, age, diabetes,
status)
patientdata <- data.frame(patientID, age, diabetes,
status)
patientdata
patientdata <- data.frame(patientID, age, diabetes,
status, row.names=patientID)
patientdata
sex <- factor(sex, levels=c(1, 2), labels=c("Male", "Female"))
# Listing 2.7 - Creating a list
g <- "My First List"
h <- c(25, 26, 18, 39)
j <- matrix(1:10, nrow=5)
k <- c("one", "two", "three")
mylist <- list(title=g, ages=h, j, k)
mylist
j
# Entering data interactively from the keyboard
mydata <- data.frame(age=numeric(0),
gender=character(0), weight=numeric(0))
mydata <- edit(mydata)
mydatatxt <- "
age gender weight
25 m 166
30 f 115
18 f 120
"
mydata <- read.table(header=TRUE, text=mydatatxt)
mydata
